---
title: "Proyecto de Riesgo ANID"
subtitle: "Diplomado en Data Science"
author: 
- "Andrea Araya (14.526.353-0)"   
- "Pablo Bellei (15.088.206-0)"  
- "Luis Cuello (18.002.988-5)"  
- "Gino Benedetti (17.349.122-0)"  
- "Gabriela Ossa (19.667.946-4)"
date: "`r Sys.Date()`"
logo: logoUC.png
output: 
  pdf_document:
    toc: yes
    toc_depth: 2
    
---

## PRIMER REPORTE

## 1. Introducción

La Subdirección de Proyectos de Investigación como parte de la Agencia Nacional de Investigación y Desarrollo (ex CONICYT), es la encargada de la administración de los tres principales fondos de investigación individual en Chile (Regular, Posdoctorado e Iniciación en investigación) y también de realizar el seguimiento de los proyectos adjudicados, para asegurar la correcta ejecución de los mismos, específicamente en lo relacionado a las exigencias académicas. 

## 1.1. Descripción de la problemática

En el proceso de evaluación de los proyectos se identifican falencias en la ejecución, es decir, hay proyectos que presentan dificultades para cumplir con las exigencias académicas mínimas para su adecuado cierre, tales como: la presentación de un *paper* o manuscrito académico aceptado, publicado o en prensa, el cumplimiento de las exigencias éticas a través de un informe de seguimiento ético y/o bioético, la realización de alguna actividad de divulgación científica, entre otras.

Por lo tanto, se vuelve necesario para la Subdirección diseñar un método que identifique patrones (variables) de no cumplimiento académico de los proyectos, y así poder crear un clasificador de riesgo, con la finalidad de alertar de forma temprana a los evaluadores, e implementar medidas de acompañamiento a los y las investigadoras para lograr el cumplimiento de las exigencias académicas y así, puedan finalizar exitosamente su investigación.

## 1.2. Preguntas a resolver

Las principales preguntas a responder serán: ¿Cuáles son los proyectos que están más propensos a presentar dificultades para culminar con éxito su investigación?, ¿Es posible asignar una clasificación de riesgo a los proyectos de acuerdo a ciertos patrones?, ¿Existen variables que ayuden a predecir el riesgo de no cumplimiento de un proyecto? 

## 1.3. Hipótesis

El modelo analítico construido a partir de la información disponible, podrá predecir el incumplimiento académico de los proyectos a partir de la clasificación de riesgo asociada a ciertas variables.

## 2. Alcance del proyecto

La información se encuentra almacenada en una base de datos administrada por la Subdirección de Proyectos de Investigación. Se cuenta con datos de los proyectos aprobados desde el año 1991 hasta la fecha, lo que se encuentran desagregados por proyecto de investigación, en los tres principales fondos de investigación individual: Regular, Postdoctorado e Iniciación en investigación.

## 2.1. Variables

 ![](Figuras/I1_Variables.JPG)

Las variables se encuentran en una base de datos relacional y se necesita una revisión de esta para poder extraer muestras, transformarlas y poder analizarlas.

A continuación se presenta un modelo relacional de las variables. 

 ![](Figuras/I1_Modelo.png)

## 3. Descripción de metodología

En la Subdirección de Proyectos de Investigación existe información respecto de los proyectos adjudicados, la cual se recolecta a través de los procesos de postulación, evaluación, adjudicación y seguimiento técnico. A partir de esta información histórica, se buscará identificar las variables que puedan incidir en el incumplimiento académico de un proyecto y de esta manera diseñar un modelo de clasificación de riesgo.

Esta información se tratará de manera anónima para resguardar la confidencialidad de los/as investigadores/as, para estos efectos se considera la transformación de las variables de identificación originales (RUT, folio) a una nueva variable de identificación para efectos de procesamiento de la información. 

Para abordar este proyecto se utilizará el método CRISP-DM (Cross Industry Standard Process for Data Mining), que desglosa el proceso en seis fases: 1) comprensión del negocio, 2) comprensión de los datos, 3) preparación de los datos, 4) modelado, 5) evaluación de los resultados y 6) puesta en marcha. En las primeras etapas, los esfuerzos estarán puestos en conocer y comprender los mecanismos de control y seguimiento de los proyectos adjudicados, para lograr identificar las variables que pueden ser utilizadas para evaluar el riesgo de incumplimiento. Una vez identificadas las variables, se procederá a la preparación de los datos para su posterior análisis y modelación. Finalmente, se evaluarán los resultados respecto de los objetivos iniciales y la aplicación de la herramienta por parte de los profesionales de la Subdirección.

Los datos necesarios para desarrollar este proyecto serán obtenidos directamente desde la Subdirección. Estos se encuentran almacenados en una base de datos institucional y el periodo disponible es desde el año 1991 a la fecha. En este momento, se cuenta con la autorización para llevar a cabo esta iniciativa y utilizar los datos disponibles.

 ![](Figuras/I1_Esquema.jpeg)


## 4. Carta Gantt

A continuación un cronograma con las principales actividades consideradas en el proyecto.

 ![](Figuras/I1_Gantt.jpg)

## 5. Anexo

Se incorporó la carta gantt como se sugirió en la primera entrega.




## SEGUNDO REPORTE

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)

library(tidyverse)
library(readxl)
library(janitor)
library(knitr)

data_gral = read_excel('Data/Data_gral_01.xlsx')
etapa = read_excel('Data/Hist_etapa_2006_06.xlsx')
bioetica = read_excel('Data/Bioetica_02.xlsx')
disciplinas = read_excel('Data/Cambios_disciplinas_03.xlsx')
miembros_ge = read_excel('Data/GE_miembros_2006_05.xlsx')
monto = read_excel('Data/Monto_solicitado_07.xlsx')
situaciones_esp = read_excel('Data/Situacion_especiales_08.xlsx')
cambios_a = read_excel('Data/carta_notas_04.xlsx', sheet = "carat")
cambios_b = read_excel('Data/carta_notas_04.xlsx', sheet = "Nota")

```

## 1. Comprensión del negocio

El ciclo de un proyecto que postula a los instrumentos de FONDECYT de la ANID se gráfica en la siguiente imagen. Se inicia con el proceso de postulación, seguido por la evaluación y posterior adjudicación. Si un proyecto resulta adjudicado, entonces entra a un proceso de seguimiento, el cual se estructura por dos aspectos: el aspecto técnico y el aspecto financiero. En este trabajo nos acotaremos al seguimiento técnico.

 ![](Figuras/I2_Flujo_Gral.jpg)
Parte de la evaluación técnica incluye la elaboración y entrega de un informe académico, el cual es evaluado por la ANID, y a partir de su resultado se puede clasificar el proyecto como 'aprobado', 'rechazado' o 'en proceso'. A continuación se presenta un flujo con los detalles respecto de la revisión y fallo  de los aspectos comprometidos. 
 
 ![](Figuras/I2_Eval_Inf.jpg)
 
## 2. Comprensión de los datos
  
Los datos están estructurados en nueve tablas, todas disponibles en formato excel. A continuación, se identifica cada tabla, con la cantidad de variables y registros que contienen. Previamente, cada tabla fue innominada a requerimiento de la Institución. En total existen 55 variables únicas. La *primary key* de todas las tablas corresponde al código que identifica a cada proyecto, denominado `cod_folio`.

| Nombre tabla | Número de variables | Número de registros |
|-------------|--------------------|-------------------|
| Data general | 25 | 14.850 |
| Etapa | 8 | 47.253 |
| Bioetica | 11 | 6.010 |
| Disciplinas | 13 | 4.093 |
| Miembros | 8 | 3.198 |
| Monto | 5 | 14.874 |
| Situacion especial | 13 | 4.221 |
| Cambios_a | 9 | 40.741 |
| Cambios_b | 8 | 40.083 |

En la siguiente figura se muestra un modelo relacional para los datos. 

 ![](Figuras/I2_Modelo.png)

Inicialmente trabajaremos con dos tablas, una que contiene los datos generales del proyecto denominada `data_gral` y otra llamada `etapa`, que incluye datos específicos sobre el avance del proyecto.

* La tabla `data_gral` incluye las siguientes variables: año proyecto, duración, fecha de término, tipo de concurso, disciplina, universidad, entre otras.

* La tabla `etapa` incluye las siguientes variables: fecha actualización del estado de etapa, el estado (aprobado, rechazado o en ejecución), entre otras.

## 3. Preparación de los datos

## 3.1 Carga y limpieza de datos

Se utilizaron las siguientes funciones para la carga y limpieza de datos:

* Carga de datos                    :     `readxl::read_excel`
* Visualización formato variables   :     `dplyr::glimpse`
* Visualización de datos faltantes  :     `naniar::vis_miss`


Los principales problemas detectados en la limpieza y su solución se presentan a continuación:

| Problema | Solución |
|----------|----------|  
| Variables carácter cargan como numérica | Se aplica función `as.character` |
| Nombres campos con espacios | Se aplica función `janitor::clean_names`|
| Entradas con datos faltantes | Se aplica `na.omit`|

## 3.1.1 Limpieza tabla Data General

A continuación se muestra el retorno de las funciones `dplyr::glimpse` y  `naniar::vis_miss` aplicadas a la tabla `data_gral` después de la limpieza.

```{r echo = FALSE}

### estandarizar nombres

data_gral <- janitor::clean_names(data_gral)
etapa <- janitor::clean_names(etapa)

### modificar formato de las variables

data_gral$cod_folio <- as.character(data_gral$cod_folio)
data_gral$c_t_relac <- as.character(data_gral$c_t_relac)
data_gral$c_region_del_ir <- as.character(data_gral$c_region_del_ir)
data_gral$cod_rut <- as.character(data_gral$cod_rut)
data_gral$gr_rel_disc <- as.character(data_gral$gr_rel_disc)
data_gral$c_disciplina <- as.character(data_gral$c_disciplina)
data_gral$c_region_ejecucion <- as.character(data_gral$c_region_ejecucion)
data_gral$c_region_institucion <- as.character(data_gral$c_region_institucion)

dplyr::glimpse(data_gral)
data_gral %>% naniar::vis_miss()

etapa$cod_folio <- as.character(etapa$cod_folio)
etapa$c_t_proyecto <- as.character(etapa$c_t_proyecto)

```

Notar los siguientes aspectos relevantes: a) que en total se identificaron 14.850 proyectos para el periodo 2006-2021, b) que pueden ser clasificados por tipo de proyecto `gl_tiproy` (iniciación, postdoctorado y regular), y c) que la duración de cada uno puede variar entre uno y cuatros años, los cuales denominaremos etapas. ^[Recordar que la tabla etapa actualiza el estado del proyecto anualmente]


## 3.1.2 Limpieza tabla Etapa

La tabla `etapa` incluye tantas entradas con el mismo número de folio como años de duración del proyecto. Por ejemplo, un mismo proyecto puede aparecer hasta cuatro veces (duró cuatro años) en dicha tabla, con dos entradas 'en ejecución', una 'rechazado' y otra 'aprobado', pero todas con diferentes fechas de actualización. Es por ello, que primero se tuvo que eliminar todos excepto el último registro por código de folio. Y también eliminar las filas con datos faltantes, porque no se sabe si esos proyectos se repiten dentro de la tabla pero para otro año.

Además, fue necesario re-clasificar las categorías que toma la variable `gl_est_etapa`, dado que tiene 24 categorías y estas no son informativas por si mismas. De este modo, la nueva variable `etapas_agrupadas` solo toma tres valores `APROBADO`, `RECHAZADO` o `EN PROCESO`. Se entenderá por:

  - `APROBADO`: cumple con las exigencias académicas establecidas en conformidad a las bases del concurso.
  - `RECHAZADO`: no cumple con las exigencias académicas establecidas en conformidad a las bases del concurso, por lo tanto, se exigen rectificaciones que puedan cambiar esta situación.
  - `EN PROCESO`: aquellos proyectos vigentes que se encuentran en ejecución, cuyo informe académico se encuentra recibido o en evaluación.

Por último, se añade una columna tiempo que equivale a la diferencia de tiempo límite inicial del proyecto menos el tiempo que tomó el proyecto en terminar.

A continuación se muestra el retorno de las funciones `dplyr::glimpse` y  `naniar::vis_miss` aplicadas a la tabla `etapa` después de la limpieza.


```{r echo = FALSE}

aprobados <- c('APROBADA',
               'APROB. RATIF.')
en_proceso <- c('I-T EN EVALUACI',
                'I-T EN REEVALUA',
                'INF.ADICI.RECIB',
                'INF. TEC. RECIB') 
rechazados <- c('SOLIC.INF.ADIC',
                'PENDIENTE CONSE')

etapa <- etapa %>% 
  mutate(tiempo = difftime(f_fin_proy, f_est_etapa, units = "day")) %>% 
  mutate(etapas_agrupadas = 
           case_when(gl_est_etapa %in% aprobados ~ 'APROBADO',
                     gl_est_etapa %in% en_proceso ~ 'EN PROCESO',
                     gl_est_etapa %in% rechazados ~ 'RECHAZADO', 
                     gl_est_etapa == 'EN EJECUCION' ~ 'RECHAZADO')) %>% 
  na.omit()

glimpse(etapa)
etapa %>% naniar::vis_miss()

```

Luego de la limpieza, la tabla `etapa` está lista para ser usada más adelante.

```{r echo = FALSE}

etapa2 <- etapa %>% 
  group_by(cod_folio) %>% 
  summarise(agno_etapa = max(agno_etapa))

etapa_gral = inner_join(etapa2, etapa, by = c('cod_folio', 'agno_etapa'))

### re-clasificación etapa y eliminar proyectos después 31.03.2021


data_prueba <- etapa_gral  %>% 
  filter(gl_est_etapa %in% aprobados | 
           gl_est_etapa %in% en_proceso | 
           gl_est_etapa %in% rechazados| 
           gl_est_etapa == 'EN EJECUCION' 
         & f_fin_proy <= '2021-03-31')  %>% 
  mutate(etapas_agrupadas = 
           case_when(gl_est_etapa %in% aprobados ~ 'APROBADO',
                     gl_est_etapa %in% en_proceso ~ 'EN PROCESO',
                     gl_est_etapa %in% rechazados ~ 'RECHAZADO', 
                     gl_est_etapa == 'EN EJECUCION' ~ 'RECHAZADO')) 

### unión tablas data_prueba y data_gral (se dejan fuera columnas repetidas)
## data_gral_2 = etapa_gral
data_gral_2 = inner_join(data_prueba, data_gral[ c(-9, -10)], 
                         by = c('cod_folio'))

### agrupación de las regiones por  zona
data_gral_2 <- data_gral_2 %>% 
  mutate(zona = 
           case_when(c_region_ejecucion %in% c(1,2,3,15) ~ "norte",
                     c_region_ejecucion %in% c(4, 5, 13) ~ "centro",
                     c_region_ejecucion %in% c(6, 7, 8) ~ "centro-sur",
                     c_region_ejecucion %in% c(9, 14, 10, 11, 12)~ "sur"))%>% 
      mutate(zona = factor(zona, levels=c("norte", 
                                          "centro", 
                                          "centro-sur", 
                                          "sur")))

```


## 4. Análsis exploratorio

Primero, se grafican las variables de la tabla `data_gral` que se creen importantes, con la finalidad de ver cómo se relacionan entre sí. Estas son el número total de proyectos por año, desagregados por tipo de proyecto y duración.

```{r echo = FALSE, message = FALSE, warning = FALSE}

# cantidad de proyectos por anio concurso, tipo o duración

Nro_proy <- data_gral %>% 
  group_by(agno_concurso, gl_tiproy, duracion) %>% 
  summarise(Nro = n_distinct(cod_folio))

ggplot(Nro_proy, aes(x = agno_concurso, y = Nro, fill = duracion))+
  geom_bar(stat = "identity")+
  facet_wrap(~gl_tiproy)+
  labs(x = "",
       y = "Nro de proyectos")+
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

```


Luego, mirando sólo la tabla `etapa`, se quiere conocer la frecuencia según la clasificación estado de proyecto. Esto es:

```{r echo = FALSE, message = FALSE, warning = FALSE}

knitr::kable(table(data_prueba$etapas_agrupadas))

```


En este punto, se ha extraído información relevante sobre ambas tablas por separado, pero ha llegado el momento de unirlas y responder preguntas más interesantes. Entonces, se crea una nueva tabla llamada `etapas_gral`, que es el resultado de un *inner_join* entre `data_gral`y `etapa`. La nueva tabla de análisis contiene 10.404 proyectos.

*Verificación de supuestos:*

1. Los proyectos en la categoría de rechazado se exceden en la duración oficial del proyecto.

Para verificar el supuesto, se realizó una gráfica del delta de tiempo desde el término de la última etapa del proyecto versus la fecha de termino del proyecto. Tiempo estimado en días. Además, se muestran los principales estadísticos de resumen.

```{r echo = FALSE, message = FALSE, warning = FALSE}

### Estadística descriptiva
#Hmisc::describe(data_gral_2, exclude.missing=TRUE, digits=4,
#                listunique=0, listnchar=12,
#                weights=NULL, normwt=FALSE, minlength=NUL)


# gráfica delta de tiempo desde última etapa vs fin del proyecto
data_gral_2$agno_etapa <- as.character(data_prueba$agno_etapa)
data_gral_2$tiempo <- as.numeric(data_prueba$tiempo)

ggplot(data_gral_2 %>% filter(tiempo>=0), aes(x= factor(etapas_agrupadas), y = tiempo)) +
  geom_boxplot() +
  facet_wrap(~gl_tiproy)+
  labs(x = "",
       y = "Delta de tiempo (días)")+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

tabla <- data_gral_2 %>%
  filter(tiempo>=0) %>%
  group_by(gl_tiproy, etapas_agrupadas) %>%
  summarise(mean_tiempo = mean(tiempo),
            max_tiempo = max(tiempo),
            std_tiempo =sd(tiempo))

knitr::kable(tabla)  

```


Este supuesto no muestra una clara relación entre exceso en el tiempo de fin de proyecto, dado que muchos proyectos aprobados exceden por mucho la fecha límite.

2. La macro-zona de Chile influye en la posibilidad de caer en incumplimiento.

Para verificar la hipótesis, se caracterizaron las regiones de ejecución del proyecto en cuatro zonas. La tabla de análisis contiene 10.404 proyectos y se presenta a continuación.

```{r echo = FALSE, message = FALSE, warning = FALSE}
### tabla de contingencia etapas vs zonas

knitr::kable(table(data_gral_2$etapas_agrupadas, data_gral_2$zona))

```

De los datos obtenidos no se puede concluir que la pertenencia del proyecto a una macro-zona particular influya en un posible incumplimiento.

3. ¿El incumplimiento Será una función del tiempo?

Para evaluar esta hipótesis, los proyectos fueron desagregados por estado y año. A continuación se presenta una tabla con el porcentaje de proyectos aprobados, rechazados y en proceso, por año.

```{r echo = FALSE, message = FALSE, warning = FALSE}

knitr::kable(round(prop.table(table(data_gral_2$agno_etapa, data_gral_2$etapas_agrupadas), margin = 2)*100, 1))

```

En el periodo de análisis 2006-2020, se observa que el porcentaje de proyectos rechazados se va incrementando, concentrándose la mayor cantidad entre 2005 y 2020. Será relevante considerar este elemento en las siguientes etapas del proyecto, ya que pueden existir cambios en los procesos de evaluación que se deberían tener en cuenta. 

## 4. Siguientes pasos

Avanzar en la construcción del panel de datos con todas las variables que puedan ayudar a explicar y predecir el incumplimiento de los proyectos de investigación.
